{"version":3,"sources":["components/button/Button.js","images/search.svg","images/send.svg","components/chat/Chat.js","components/user_list/UserPageList.js","components/main_page/MainPage.js","App.js","reportWebVitals.js","index.js"],"names":["Button","onClick","children","className","Chat","user","messageDB","messageID","image","name","active","useState","message","setMessage","newMessages","setNewMessages","uid","displayName","photoURL","useEffect","collection","doc","orderBy","onSnapshot","querySnapshot","data","docs","map","id","src","alt","text","moment","date","fromNow","onSubmit","e","preventDefault","add","firebase","firestore","FieldValue","serverTimestamp","onChange","target","value","type","placeholder","send","UserPageList","users","setUsers","messages","setMessages","setMessageID","setImage","setName","href","logo","logged_user","chatUser","length","forEach","userFirstID","userSecondID","set","photo","chat","checkedUser","filter","checkedUser2","event","chatID","getChatID","MainPage","checkUser","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","App","currentUser","setUser","initializing","setInitializing","setActive","onAuthStateChanged","signIn","a","provider","GoogleAuthProvider","useDeviceLanguage","signInWithPopup","console","error","signOut","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6cb8bfce.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Button.scss\";\n\nexport const Button = ({onClick = null, children = null}) => {\n    return (\n        <>\n            <button className=\"sign__button\" onClick={onClick}>{children}</button>\n        </>\n    )\n}","export default __webpack_public_path__ + \"static/media/search.da3387c7.svg\";","export default __webpack_public_path__ + \"static/media/send.da88ad74.svg\";","import React, {useState, useEffect} from \"react\";\nimport \"./Chat.scss\";\nimport send from \"../../images/send.svg\";\nimport firebase from \"firebase/app\";\nimport moment from \"moment\";\n\nexport const Chat = ({user, messageDB, messageID, image, name, active}) => {\n\n    const [message, setMessage] = useState([]);\n    const [newMessages, setNewMessages] = useState('');\n\n    const {uid, displayName, photoURL} = user;\n\n    useEffect(() => {\n        if (messageDB) {\n            messageDB.collection('messages').doc(`${messageID}`).collection('message').orderBy('date').onSnapshot(querySnapshot => {\n                const data = querySnapshot.docs.map(doc => ({\n                    ...doc.data(),\n                    id: doc.id,\n                }))\n                setMessage(data);\n            })\n        }\n\n    }, [messageID, messageDB]);\n\n    const onChange = e => {\n        setNewMessages(e.target.value);\n    }\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        if (messageDB) {\n            messageDB.collection('messages').doc(`${messageID}`).collection('message').add({\n                text: newMessages,\n                date: firebase.firestore.FieldValue.serverTimestamp(),\n                uid,\n                displayName,\n                photoURL\n            })\n        }\n        setNewMessages(\"\");\n    }\n\n    return (\n        <>\n            <div className={active ? `chat show` : `chat`}>\n                <div className=\"chat__users\">\n                    <img src={image} alt=\"avatar\"/>\n                    <p>{name}</p>\n                </div>\n                <div className=\"messages\">\n                    {\n                        message.map(message => {\n                            return (\n                                <>\n                                    {\n                                        uid === message.uid ?\n                                            <div key={message.id} className={`messages__left`}>\n                                                <div className=\"message\">\n                                                    <p className=\"main__message\">{message.text}</p>\n                                                    <p>\n                                                        {\n                                                            // `${new Date((message.date * 1000) - 62135638488000).toLocaleDateString()} ${new Date(message.date * 1000).toLocaleTimeString([], {hour: '2-digit', minute: '2-digit'})}`\n                                                            `${moment((message.date * 1000) - 62135638488000).fromNow()}`\n                                                        }\n                                                    </p>\n                                                </div>\n                                                <img src={message.photoURL} alt={\"avatar\"}/>\n                                            </div>\n                                            :\n                                            <div key={message.id} className={`messages__right`}>\n                                                <img src={message.photoURL} alt={\"avatar\"}/>\n                                                <div className=\"message\">\n                                                    <p className=\"main__message\">{message.text}</p>\n                                                    <p>\n                                                        {\n                                                            // `${new Date((message.date * 1000) - 62135638488000).toLocaleDateString()} ${new Date(message.date * 1000).toLocaleTimeString([], {hour: '2-digit', minute: '2-digit'})}`\n                                                            `${moment((message.date * 1000) - 62135638488000).fromNow()}`\n                                                        }\n                                                    </p>\n                                                </div>\n                                            </div>\n                                    }\n                                </>\n                            )\n                        })\n                    }\n                </div>\n                <form onSubmit={onSubmit} className=\"send__messages\">\n                    <input onChange={onChange} type=\"text\" value={newMessages} placeholder=\"Type Your message...\"/>\n                    <button><img src={send} alt=\"send button\"/></button>\n                </form>\n            </div>\n        </>\n    )\n}","import React, {useState, useEffect} from \"react\";\nimport \"./UserPageList.scss\";\nimport logo from \"../../images/search.svg\";\nimport {Chat} from \"../chat/Chat\";\n\nexport const UserPageList = ({user, messageDB, active}) => {\n\n    const [users, setUsers] = useState([]);\n    const [messages, setMessages] = useState([]);\n    const [messageID, setMessageID] = useState();\n    const [image, setImage] = useState();\n    const [name, setName] = useState();\n\n    useEffect(() => {\n        if (messageDB) {\n            messageDB.collection('users').onSnapshot(querySnapshot => {\n                const data = querySnapshot.docs.map(doc => ({\n                    ...doc.data(),\n                    id: doc.id,\n                }))\n                setUsers(data);\n            })\n            messageDB.collection('messages').onSnapshot(querySnapshot => {\n                const data = querySnapshot.docs.map(doc => ({\n                    ...doc.data(),\n                    id: doc.id\n                }))\n                setMessages(data);\n            })\n        }\n    }, [messageDB]);\n\n    const getUser = chatUser => {\n        if (messages.length > 0) {\n            messages.forEach(message => {\n                if (message.userFirstID === chatUser.uid || message.userSecondID === user.uid) {\n                    messageDB.collection('messages').doc(`${user.uid}${chatUser.uid}`).set({\n                        userSecondID: user.uid,\n                        userFirstID: chatUser.uid\n                    })\n                }\n            })\n        } else {\n            messageDB.collection('messages').doc(`${user.uid}${chatUser.uid}`).set({\n                userSecondID: user.uid,\n                userFirstID: chatUser.uid\n            })\n        }\n    }\n\n    const getChatID = (chatID, event, checkedUser, checkedUser2) => {\n        event.preventDefault();\n        setMessageID(chatID);\n\n        if (user.uid === checkedUser2.uid) {\n            setImage(checkedUser.photo);\n            setName(checkedUser.name);\n        } else {\n            setImage(checkedUser2.photo);\n            setName(checkedUser2.name);\n        }\n\n    }\n\n\n    return (\n        <>\n            <div className={active ? `user__page-list show` : `user__page-list`}>\n                <div className=\"users__list\">\n                    <h1>Users</h1>\n                    <ul>\n                        <li className=\"user-search\"><a href=\"#\"><img src={logo} alt=\"search\"/></a></li>\n                        {\n                            users.map(logged_user => {\n                                return (\n                                    <>\n                                        {\n                                            logged_user.uid !== user.uid ?\n                                                <li key={logged_user.id} className=\"user-logo\">\n                                                    <button onClick={() => getUser(logged_user)}><img\n                                                        src={logged_user.photo} alt=\"photo\"/>\n                                                    </button>\n                                                    <p className=\"user-logo-name\">{logged_user.name}</p>\n                                                </li>\n                                                :\n                                                null\n                                        }\n\n                                    </>\n                                )\n                            })\n                        }\n\n                    </ul>\n                </div>\n                <ul className=\"user-list\">\n                    <h1 className=\"user-list-title\">Messages</h1>\n                    {\n                        messages.map(chat => {\n                            const checkedUser = users.filter(user => user.uid === chat.userFirstID);\n                            const checkedUser2 = users.filter(user => user.uid === chat.userSecondID);\n\n                            return (\n                                <>\n                                    {\n                                        chat.userFirstID === user.uid || chat.userSecondID === user.uid ?\n                                            <li key={chat.id}>\n                                                <a onClick={event => getChatID(chat.id, event, checkedUser[0], checkedUser2[0])}\n                                                   href=\"\"\n                                                   className=\"users\">\n                                                    <img src={\n                                                        user.uid === chat.userFirstID ? checkedUser2[0].photo : checkedUser[0].photo\n                                                    } alt=\"avatar\"/>\n                                                    <div className=\"user-description\">\n                                                        <h1 className=\"user-desc-unread\">\n                                                            {\n                                                                user.uid === chat.userFirstID ? checkedUser2[0].name : checkedUser[0].name\n                                                            }\n                                                        </h1>\n                                                    </div>\n                                                </a>\n                                            </li>\n                                            :\n                                            null\n                                    }\n\n                                </>\n\n                            )\n                        })\n                    }\n                </ul>\n            </div>\n            {\n                messageID ?\n                    <Chat user={user}\n                          messageDB={messageDB}\n                          messageID={messageID}\n                          image={image}\n                          name={name}\n                          active={active}/>\n                    :\n                    null\n            }\n        </>\n    )\n}","import React from \"react\";\nimport \"./MainPage.scss\";\nimport {UserPageList} from \"../user_list/UserPageList\";\n\nexport const MainPage = ({user, messageDB, users, active, checkUser}) => {\n\n    // const {uid, displayName, photoURL} = user;\n    //\n    // useEffect(() => {\n    //     if (messageDB) {\n    //         messageDB.collection('users').add({\n    //             name: displayName,\n    //             photo: photoURL,\n    //             uid: uid\n    //         })\n    //     }\n    // }, []);\n\n    return (\n        <>\n            <section className=\"main__page\">\n                <div className=\"container\">\n                    <UserPageList user={user} messageDB={messageDB} active={active}/>\n                </div>\n            </section>\n        </>\n    )\n}","import React, {useState, useEffect} from \"react\";\nimport './App.scss';\nimport 'firebase/auth';\nimport firebase from \"firebase/app\";\nimport 'firebase/firestore';\nimport {Button} from \"./components/button/Button\";\nimport \"./App.scss\";\nimport {MainPage} from \"./components/main_page/MainPage\";\n\nfirebase.initializeApp({\n    apiKey: \"AIzaSyDiGHuehmVjeTB08DcTVueINPfnZ6atwTQ\",\n    authDomain: \"message-appk.firebaseapp.com\",\n    projectId: \"message-appk\",\n    storageBucket: \"message-appk.appspot.com\",\n    messagingSenderId: \"1088403228949\",\n    appId: \"1:1088403228949:web:df373df2e84773f654c11c\"\n});\n\nconst auth = firebase.auth();\nconst messageDB = firebase.firestore();\n\nexport const App = () => {\n    const [user, setUser] = useState(() => auth.currentUser)\n    const [initializing, setInitializing] = useState(true);\n    const [active, setActive] = useState(false);\n\n    useEffect(() => {\n        const unsubscribe = auth.onAuthStateChanged(user => {\n            if (user) {\n                setUser(user);\n\n                const {uid, displayName, photoURL} = user;\n\n                messageDB.collection('users').doc(`${uid}`).set({\n                    name: displayName,\n                    photo: photoURL,\n                    uid: uid\n                })\n\n            } else {\n                setUser(null);\n            }\n            if (initializing) {\n                setInitializing(false);\n            }\n        })\n\n        return unsubscribe;\n    }, [initializing])\n\n\n    const signIn = async () => {\n        const provider = new firebase.auth.GoogleAuthProvider();\n        auth.useDeviceLanguage();\n\n        try {\n            await auth.signInWithPopup(provider);\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    const signOut = async () => {\n        try {\n            await firebase.auth().signOut();\n        } catch (error) {\n            console.log(error.message);\n        }\n    }\n\n    const toggleClass = event => {\n        event.preventDefault();\n        setActive(!active);\n\n    }\n    if (initializing) return \"Loading...\";\n\n    return (\n        <>\n            {\n                user ?\n                    <div className=\"page\">\n                        <header className=\"app__header\">\n                            <div className=\"container\">\n                                <button onClick={toggleClass} className={active ? \"hamburger show\" : \"hamburger\"}>\n                                    <span/>\n                                    <span/>\n                                    <span/>\n                                </button>\n                                <div className=\"logo\">\n                                    <h1 className=\"logo-title\">\n                                        <strong>Super</strong>\n                                        <span>Message app</span>\n                                    </h1>\n                                </div>\n                                <nav className=\"app__header-nav\">\n                                    <ul className=\"nav-list\">\n                                        <li className=\"nav-list-text\">\n                                            <Button onClick={signOut}>Sign Out</Button>\n                                        </li>\n                                        <li className=\"nav-list-text\">\n                                            <a href=\"\"><img src={user.photoURL}/></a>\n                                        </li>\n\n                                    </ul>\n                                </nav>\n                            </div>\n                        </header>\n                        <MainPage user={user} messageDB={messageDB} active={active}/>\n                    </div>\n                    :\n                    <div className=\"page\">\n                        <header className=\"app__header\">\n                            <div className=\"container\">\n                                <div className=\"logo\">\n                                    <h1 className=\"logo-title\">\n                                        <strong>Super</strong>\n                                        <span>Message app</span>\n                                    </h1>\n                                </div>\n                                <nav className=\"app__header-nav\">\n                                    <ul className=\"nav-list\">\n                                        <li className=\"nav-list-text\">\n                                            <Button onClick={signIn}>Sign In</Button>\n                                        </li>\n                                    </ul>\n                                </nav>\n                            </div>\n                        </header>\n                        <div className=\"main__page_signout\">\n                            <div className=\"main__page_signout-text\">\n                                <h1 className=\"logo-title\">\n                                    <strong>Super</strong>\n                                    <span>Message app</span>\n                                </h1>\n                                <h1>Sign in to use application</h1>\n                            </div>\n                        </div>\n                        <section>\n                            <div className=\"wave wave1\"/>\n                            <div className=\"wave wave2\"/>\n                            <div className=\"wave wave3\"/>\n                            <div className=\"wave wave4\"/>\n                        </section>\n                    </div>\n            }\n        </>\n    );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}