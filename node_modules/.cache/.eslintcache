[{"/Users/dawidsowinski/Desktop/CodersLab_Kurs/Message_application/src/index.js":"1","/Users/dawidsowinski/Desktop/CodersLab_Kurs/Message_application/src/App.js":"2","/Users/dawidsowinski/Desktop/CodersLab_Kurs/Message_application/src/reportWebVitals.js":"3","/Users/dawidsowinski/Desktop/CodersLab_Kurs/Message_application/src/components/button/Button.js":"4","/Users/dawidsowinski/Desktop/CodersLab_Kurs/Message_application/src/components/main_page/MainPage.js":"5","/Users/dawidsowinski/Desktop/CodersLab_Kurs/Message_application/src/components/user_list/UserPageList.js":"6","/Users/dawidsowinski/Desktop/CodersLab_Kurs/Message_application/src/components/chat/Chat.js":"7"},{"size":504,"mtime":1621347486264,"results":"8","hashOfConfig":"9"},{"size":5322,"mtime":1621436274755,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1621325958370,"results":"11","hashOfConfig":"9"},{"size":266,"mtime":1621351112667,"results":"12","hashOfConfig":"9"},{"size":786,"mtime":1621435559470,"results":"13","hashOfConfig":"9"},{"size":3802,"mtime":1621437666939,"results":"14","hashOfConfig":"9"},{"size":3555,"mtime":1621429632482,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"m0kc42",{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"18"},"/Users/dawidsowinski/Desktop/CodersLab_Kurs/Message_application/src/index.js",[],["35","36"],"/Users/dawidsowinski/Desktop/CodersLab_Kurs/Message_application/src/App.js",["37","38","39"],"import React, {useState, useEffect} from \"react\";\nimport './App.scss';\nimport 'firebase/auth';\nimport firebase from \"firebase/app\";\nimport 'firebase/firestore';\nimport {Button} from \"./components/button/Button\";\nimport \"./App.scss\";\nimport {MainPage} from \"./components/main_page/MainPage\";\n\nfirebase.initializeApp({\n    apiKey: \"AIzaSyDiGHuehmVjeTB08DcTVueINPfnZ6atwTQ\",\n    authDomain: \"message-appk.firebaseapp.com\",\n    projectId: \"message-appk\",\n    storageBucket: \"message-appk.appspot.com\",\n    messagingSenderId: \"1088403228949\",\n    appId: \"1:1088403228949:web:df373df2e84773f654c11c\"\n});\n\nconst auth = firebase.auth();\nconst messageDB = firebase.firestore();\n\nexport const App = () => {\n    const [user, setUser] = useState(() => auth.currentUser)\n    const [initializing, setInitializing] = useState(true);\n\n    useEffect(() => {\n        const unsubscribe = auth.onAuthStateChanged(user => {\n            if (user) {\n                setUser(user);\n\n                // const {uid, displayName, photoURL} = user;\n                // messageDB.collection('users').add({\n                //     name: displayName,\n                //     photo: photoURL,\n                //     uid: uid\n                // })\n\n            } else {\n                setUser(null);\n            }\n            if (initializing) {\n                setInitializing(false);\n            }\n        })\n\n        return unsubscribe;\n    }, [])\n\n    const signIn = async () => {\n        const provider = new firebase.auth.GoogleAuthProvider();\n        auth.useDeviceLanguage();\n\n        try {\n            await auth.signInWithPopup(provider);\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    const signOut = async () => {\n        try {\n            await firebase.auth().signOut();\n        } catch (error) {\n            console.log(error.message);\n        }\n    }\n\n    if (initializing) return \"Loading...\";\n\n    return (\n        <>\n            {\n                user ?\n                    <div className=\"page\">\n                        <header className=\"app__header\">\n                            <div className=\"container\">\n                                <button className=\"hamburger\">\n                                    <span/>\n                                    <span/>\n                                    <span/>\n                                </button>\n                                <div className=\"logo\">\n                                    <h1 className=\"logo-title\">\n                                        <strong>Super</strong>\n                                        <span>Message app</span>\n                                    </h1>\n                                </div>\n                                <nav className=\"app__header-nav\">\n                                    <ul className=\"nav-list\">\n                                        <li className=\"nav-list-text\">\n                                            <Button onClick={signOut}>Sign Out</Button>\n                                        </li>\n                                        <li className=\"nav-list-text\">\n                                            <a href=\"\"><img src={user.photoURL}/></a>\n                                        </li>\n\n                                    </ul>\n                                </nav>\n                            </div>\n                        </header>\n                        <MainPage user={user} messageDB={messageDB} auth={auth}/>\n                    </div>\n                    :\n                    <div className=\"page\">\n                        <header className=\"app__header\">\n                            <div className=\"container\">\n                                <div className=\"logo\">\n                                    <h1 className=\"logo-title\">\n                                        <strong>Super</strong>\n                                        <span>Message app</span>\n                                    </h1>\n                                </div>\n                                <nav className=\"app__header-nav\">\n                                    <ul className=\"nav-list\">\n                                        <li className=\"nav-list-text\">\n                                            <Button onClick={signIn}>Sign In</Button>\n                                        </li>\n                                    </ul>\n                                </nav>\n                            </div>\n                        </header>\n                        <div className=\"main__page_signout\">\n                            <div className=\"main__page_signout-text\">\n                                <h1 className=\"logo-title\">\n                                    <strong>Super</strong>\n                                    <span>Message app</span>\n                                </h1>\n                                <h1>Sign in to use application</h1>\n                            </div>\n                        </div>\n                        <section>\n                            <div className=\"wave wave1\"/>\n                            <div className=\"wave wave2\"/>\n                            <div className=\"wave wave3\"/>\n                            <div className=\"wave wave4\"/>\n                        </section>\n                    </div>\n            }\n        </>\n    );\n}\n","/Users/dawidsowinski/Desktop/CodersLab_Kurs/Message_application/src/reportWebVitals.js",[],"/Users/dawidsowinski/Desktop/CodersLab_Kurs/Message_application/src/components/button/Button.js",["40","41"],"import React, { useState, useEffect } from \"react\";\nimport \"./Button.scss\";\n\nexport const Button = ({onClick = null, children = null}) => {\n    return (\n        <>\n            <button className=\"sign__button\" onClick={onClick}>{children}</button>\n        </>\n    )\n}","/Users/dawidsowinski/Desktop/CodersLab_Kurs/Message_application/src/components/main_page/MainPage.js",["42","43"],"import React, { useState, useEffect } from \"react\";\nimport \"./MainPage.scss\";\nimport {UserPageList} from \"../user_list/UserPageList\";\n\nexport const MainPage = ({user, messageDB, auth, users}) => {\n\n    // const {uid, displayName, photoURL} = user;\n    //\n    // useEffect(() => {\n    //     if (messageDB) {\n    //         messageDB.collection('users').add({\n    //             name: displayName,\n    //             photo: photoURL,\n    //             uid: uid\n    //         })\n    //     }\n    // }, [auth.currentUser]);\n\n    return (\n        <>\n            <section className=\"main__page\">\n                <div className=\"container\">\n                    <UserPageList user={user} messageDB={messageDB} users={users}/>\n                </div>\n            </section>\n        </>\n    )\n}","/Users/dawidsowinski/Desktop/CodersLab_Kurs/Message_application/src/components/user_list/UserPageList.js",["44","45","46","47","48"],"/Users/dawidsowinski/Desktop/CodersLab_Kurs/Message_application/src/components/chat/Chat.js",["49","50","51"],"import React, {useState, useEffect} from \"react\";\nimport \"./Chat.scss\";\nimport send from \"../../images/send.svg\";\nimport {formatRelative} from 'date-fns';\nimport firebase from \"firebase/app\";\n\nexport const Chat = ({user, messageDB, messages}) => {\n\n    const [message, setMessage] = useState([]);\n    const [newMessages, setNewMessages] = useState('');\n\n    const {uid, displayName, photoURL} = user;\n\n    useEffect(() => {\n        if (messageDB) {\n            messageDB.collection('messages').doc('ax7NiQ3PCjSi7iUNjWiR').collection('message').orderBy('date').onSnapshot(querySnapshot => {\n                const data = querySnapshot.docs.map(doc => ({\n                    ...doc.data(),\n                    id: doc.id,\n                }))\n                setMessage(data);\n            })\n        }\n    }, [messageDB]);\n\n    const onChange = e => {\n        setNewMessages(e.target.value);\n    }\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        if (messageDB) {\n            messageDB.collection('messages').doc('ax7NiQ3PCjSi7iUNjWiR').collection('message').add({\n                text: newMessages,\n                date: firebase.firestore.FieldValue.serverTimestamp(),\n                uid,\n                displayName,\n                photoURL\n            })\n        }\n        setNewMessages(\"\");\n    }\n\n    return (\n        <>\n            <div className=\"chat\">\n                <div className=\"chat__users\">\n                    <img src=\"man_photo1.jpeg\"/>\n                    <p>Dawid Sowiński</p>\n                </div>\n                <div className=\"messages\">\n                    {\n                        message.map(message => {\n                            return (\n                                <>\n                                    {\n                                        uid === message.uid ?\n                                            <div key={message.id} className={`messages__left`}>\n                                                <div className=\"message\">\n                                                    <p className=\"main__message\">{message.text}</p>\n                                                    {/*<p>{formatRelative(new Date(message.date.seconds * 1000), new Date())}</p>*/}\n                                                </div>\n                                                <img src={message.photoURL} alt={\"avatar\"}/>\n                                            </div>\n                                            :\n                                            <div key={message.id} className={`messages__right`}>\n                                                <img src={message.photoURL} alt={\"avatar\"}/>\n                                                <div className=\"message\">\n                                                    <p className=\"main__message\">{message.text}</p>\n                                                    {/*<p>{formatRelative(new Date(message.date.seconds * 1000), new Date())}</p>*/}\n                                                </div>\n                                            </div>\n                                    }\n                                </>\n                            )\n                        })\n                    }\n                </div>\n                <form onSubmit={onSubmit} className=\"send__messages\">\n                    <input onChange={onChange} type=\"text\" value={newMessages} placeholder=\"Type Your message...\"/>\n                    <button><img src={send}/></button>\n                </form>\n            </div>\n        </>\n    )\n}",{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":47,"column":8,"nodeType":"58","endLine":47,"endColumn":10,"suggestions":"59"},{"ruleId":"60","severity":1,"message":"61","line":94,"column":45,"nodeType":"62","endLine":94,"endColumn":56},{"ruleId":"63","severity":1,"message":"64","line":94,"column":56,"nodeType":"62","endLine":94,"endColumn":82},{"ruleId":"65","severity":1,"message":"66","line":1,"column":17,"nodeType":"67","messageId":"68","endLine":1,"endColumn":25},{"ruleId":"65","severity":1,"message":"69","line":1,"column":27,"nodeType":"67","messageId":"68","endLine":1,"endColumn":36},{"ruleId":"65","severity":1,"message":"66","line":1,"column":17,"nodeType":"67","messageId":"68","endLine":1,"endColumn":25},{"ruleId":"65","severity":1,"message":"69","line":1,"column":27,"nodeType":"67","messageId":"68","endLine":1,"endColumn":36},{"ruleId":"60","severity":1,"message":"61","line":45,"column":53,"nodeType":"62","endLine":45,"endColumn":64},{"ruleId":"63","severity":1,"message":"64","line":45,"column":64,"nodeType":"62","endLine":45,"endColumn":81},{"ruleId":"63","severity":1,"message":"64","line":52,"column":83,"nodeType":"62","endLine":52,"endColumn":106},{"ruleId":"60","severity":1,"message":"61","line":72,"column":41,"nodeType":"62","endLine":72,"endColumn":70},{"ruleId":"63","severity":1,"message":"64","line":73,"column":45,"nodeType":"62","endLine":73,"endColumn":68},{"ruleId":"65","severity":1,"message":"70","line":4,"column":9,"nodeType":"67","messageId":"68","endLine":4,"endColumn":23},{"ruleId":"63","severity":1,"message":"64","line":49,"column":21,"nodeType":"62","endLine":49,"endColumn":49},{"ruleId":"63","severity":1,"message":"64","line":82,"column":29,"nodeType":"62","endLine":82,"endColumn":46},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initializing'. Either include it or remove the dependency array.","ArrayExpression",["73"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'formatRelative' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"74","fix":"75"},"Update the dependencies array to be: [initializing]",{"range":"76","text":"77"},[1412,1414],"[initializing]"]