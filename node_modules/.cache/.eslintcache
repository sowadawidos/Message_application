[{"/Users/dawidsowinski/Desktop/KursCoderslab/Message_application/src/index.js":"1","/Users/dawidsowinski/Desktop/KursCoderslab/Message_application/src/App.js":"2","/Users/dawidsowinski/Desktop/KursCoderslab/Message_application/src/reportWebVitals.js":"3","/Users/dawidsowinski/Desktop/KursCoderslab/Message_application/src/components/main_page/MainPage.js":"4","/Users/dawidsowinski/Desktop/KursCoderslab/Message_application/src/components/button/Button.js":"5","/Users/dawidsowinski/Desktop/KursCoderslab/Message_application/src/components/user_list/UserPageList.js":"6","/Users/dawidsowinski/Desktop/KursCoderslab/Message_application/src/components/chat/Chat.js":"7"},{"size":504,"mtime":1621602244444,"results":"8","hashOfConfig":"9"},{"size":5696,"mtime":1621602244439,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1621602244444,"results":"11","hashOfConfig":"9"},{"size":760,"mtime":1621602244441,"results":"12","hashOfConfig":"9"},{"size":241,"mtime":1621602244440,"results":"13","hashOfConfig":"9"},{"size":5401,"mtime":1621761329613,"results":"14","hashOfConfig":"9"},{"size":4220,"mtime":1621721330098,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1v512fs",{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/dawidsowinski/Desktop/KursCoderslab/Message_application/src/index.js",[],["32","33"],"/Users/dawidsowinski/Desktop/KursCoderslab/Message_application/src/App.js",["34","35"],"import React, {useState, useEffect} from \"react\";\nimport './App.scss';\nimport 'firebase/auth';\nimport firebase from \"firebase/app\";\nimport 'firebase/firestore';\nimport {Button} from \"./components/button/Button\";\nimport \"./App.scss\";\nimport {MainPage} from \"./components/main_page/MainPage\";\n\nfirebase.initializeApp({\n    apiKey: \"AIzaSyDiGHuehmVjeTB08DcTVueINPfnZ6atwTQ\",\n    authDomain: \"message-appk.firebaseapp.com\",\n    projectId: \"message-appk\",\n    storageBucket: \"message-appk.appspot.com\",\n    messagingSenderId: \"1088403228949\",\n    appId: \"1:1088403228949:web:df373df2e84773f654c11c\"\n});\n\nconst auth = firebase.auth();\nconst messageDB = firebase.firestore();\n\nexport const App = () => {\n    const [user, setUser] = useState(() => auth.currentUser)\n    const [initializing, setInitializing] = useState(true);\n    const [active, setActive] = useState(false);\n\n    useEffect(() => {\n        const unsubscribe = auth.onAuthStateChanged(user => {\n            if (user) {\n                setUser(user);\n\n                const {uid, displayName, photoURL} = user;\n\n                messageDB.collection('users').doc(`${uid}`).set({\n                    name: displayName,\n                    photo: photoURL,\n                    uid: uid\n                })\n\n            } else {\n                setUser(null);\n            }\n            if (initializing) {\n                setInitializing(false);\n            }\n        })\n\n        return unsubscribe;\n    }, [initializing])\n\n    // const checkUser = users => {\n    //     const test = users.some(user1 => {\n    //         return user1.uid.includes(user.uid);\n    //     })\n    //     console.log(auth);\n    // }\n\n    const signIn = async () => {\n        const provider = new firebase.auth.GoogleAuthProvider();\n        auth.useDeviceLanguage();\n\n        try {\n            await auth.signInWithPopup(provider);\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    const signOut = async () => {\n        try {\n            await firebase.auth().signOut();\n        } catch (error) {\n            console.log(error.message);\n        }\n    }\n\n    const toggleClass = event => {\n        event.preventDefault();\n        setActive(!active);\n\n    }\n    if (initializing) return \"Loading...\";\n\n    return (\n        <>\n            {\n                user ?\n                    <div className=\"page\">\n                        <header className=\"app__header\">\n                            <div className=\"container\">\n                                <button onClick={toggleClass} className=\"hamburger\">\n                                    <span/>\n                                    <span/>\n                                    <span/>\n                                </button>\n                                <div className=\"logo\">\n                                    <h1 className=\"logo-title\">\n                                        <strong>Super</strong>\n                                        <span>Message app</span>\n                                    </h1>\n                                </div>\n                                <nav className=\"app__header-nav\">\n                                    <ul className=\"nav-list\">\n                                        <li className=\"nav-list-text\">\n                                            <Button onClick={signOut}>Sign Out</Button>\n                                        </li>\n                                        <li className=\"nav-list-text\">\n                                            <a href=\"\"><img src={user.photoURL}/></a>\n                                        </li>\n\n                                    </ul>\n                                </nav>\n                            </div>\n                        </header>\n                        <MainPage user={user} messageDB={messageDB} active={active}/>\n                    </div>\n                    :\n                    <div className=\"page\">\n                        <header className=\"app__header\">\n                            <div className=\"container\">\n                                <div className=\"logo\">\n                                    <h1 className=\"logo-title\">\n                                        <strong>Super</strong>\n                                        <span>Message app</span>\n                                    </h1>\n                                </div>\n                                <nav className=\"app__header-nav\">\n                                    <ul className=\"nav-list\">\n                                        <li className=\"nav-list-text\">\n                                            <Button onClick={signIn}>Sign In</Button>\n                                        </li>\n                                    </ul>\n                                </nav>\n                            </div>\n                        </header>\n                        <div className=\"main__page_signout\">\n                            <div className=\"main__page_signout-text\">\n                                <h1 className=\"logo-title\">\n                                    <strong>Super</strong>\n                                    <span>Message app</span>\n                                </h1>\n                                <h1>Sign in to use application</h1>\n                            </div>\n                        </div>\n                        <section>\n                            <div className=\"wave wave1\"/>\n                            <div className=\"wave wave2\"/>\n                            <div className=\"wave wave3\"/>\n                            <div className=\"wave wave4\"/>\n                        </section>\n                    </div>\n            }\n        </>\n    );\n}\n","/Users/dawidsowinski/Desktop/KursCoderslab/Message_application/src/reportWebVitals.js",[],"/Users/dawidsowinski/Desktop/KursCoderslab/Message_application/src/components/main_page/MainPage.js",[],"/Users/dawidsowinski/Desktop/KursCoderslab/Message_application/src/components/button/Button.js",[],"/Users/dawidsowinski/Desktop/KursCoderslab/Message_application/src/components/user_list/UserPageList.js",["36","37","38","39"],"/Users/dawidsowinski/Desktop/KursCoderslab/Message_application/src/components/chat/Chat.js",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":108,"column":45,"nodeType":"46","endLine":108,"endColumn":56},{"ruleId":"47","severity":1,"message":"48","line":108,"column":56,"nodeType":"46","endLine":108,"endColumn":82},{"ruleId":"44","severity":1,"message":"45","line":63,"column":53,"nodeType":"46","endLine":63,"endColumn":65},{"ruleId":"47","severity":1,"message":"48","line":63,"column":65,"nodeType":"46","endLine":63,"endColumn":82},{"ruleId":"47","severity":1,"message":"48","line":71,"column":92,"nodeType":"46","endLine":71,"endColumn":116},{"ruleId":"44","severity":1,"message":"45","line":97,"column":49,"nodeType":"46","endLine":99,"endColumn":70},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]