{"ast":null,"code":"var _jsxFileName = \"/Users/dawidsowinski/Desktop/CodersLab_Kurs/Message_application/src/components/user_list/UserPageList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./UserPageList.scss\";\nimport logo from \"../../images/search.svg\";\nimport { Chat } from \"../chat/Chat\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const UserPageList = ({\n  user,\n  messageDB\n}) => {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [messageID, setMessageID] = useState('');\n  useEffect(() => {\n    if (messageDB) {\n      messageDB.collection('users').onSnapshot(querySnapshot => {\n        const data = querySnapshot.docs.map(doc => ({ ...doc.data(),\n          id: doc.id\n        }));\n        setUsers(data);\n      });\n      messageDB.collection('messages').onSnapshot(querySnapshot => {\n        const data = querySnapshot.docs.map(doc => ({ ...doc.data(),\n          id: doc.id\n        }));\n        setMessages(data);\n      });\n    }\n  }, [messageDB]);\n\n  const getUser = chatUser => {\n    if (messageDB) {\n      messageDB.collection('messages').add({\n        userSecondID: user.uid,\n        userFirstID: chatUser.uid\n      });\n    }\n  };\n\n  const getChatID = (chatID, event) => {\n    event.preventDefault();\n    setMessageID(chatID);\n  };\n\n  console.log(messageID); // console.log(messages);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user__page-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"users__list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"user-search\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: logo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 64\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 53\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), users.map(user => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"user-logo\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => getUser(user),\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: user.photo\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 58,\n                    columnNumber: 83\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 45\n                }, this)\n              }, user.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 41\n              }, this)\n            }, void 0, false);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"user-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"user-list-title\",\n          children: \"Messages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), messages.map(chat => {\n          const image = users.map(el => el.uid === chat.userFirstID ? el.photo : null);\n          const name = users.map(el => el.uid === chat.userFirstID ? el.name : null);\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                onClick: event => getChatID(chat.id, event),\n                href: \"\",\n                className: \"users\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: `${image}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"user-description\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                    className: \"user-desc-unread\",\n                    children: name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"wiadomo\\u015B\\u0107 cos tam\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"user-date\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"12:00\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"today\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 41\n              }, this)\n            }, chat.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 37\n            }, this)\n          }, void 0, false);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), messageID ? /*#__PURE__*/_jsxDEV(Chat, {\n      user: user,\n      messageDB: messageDB,\n      messageID: messageID\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }, this) : null]\n  }, void 0, true);\n};\n\n_s(UserPageList, \"RvvxqNW+uR0DziACcuXHql6N2bs=\");\n\n_c = UserPageList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserPageList\");","map":{"version":3,"sources":["/Users/dawidsowinski/Desktop/CodersLab_Kurs/Message_application/src/components/user_list/UserPageList.js"],"names":["React","useState","useEffect","Chat","UserPageList","user","messageDB","users","setUsers","messages","setMessages","messageID","setMessageID","collection","onSnapshot","querySnapshot","data","docs","map","doc","id","getUser","chatUser","add","userSecondID","uid","userFirstID","getChatID","chatID","event","preventDefault","console","log","logo","photo","chat","image","el","name"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport \"./UserPageList.scss\";\nimport logo from \"../../images/search.svg\";\nimport {Chat} from \"../chat/Chat\";\n\nexport const UserPageList = ({user , messageDB}) => {\n\n    const [users, setUsers] = useState([]);\n    const [messages, setMessages] = useState([]);\n    const [messageID, setMessageID] = useState('');\n\n    useEffect(() => {\n        if (messageDB) {\n            messageDB.collection('users').onSnapshot(querySnapshot => {\n                const data = querySnapshot.docs.map(doc => ({\n                    ...doc.data(),\n                    id: doc.id,\n                }))\n                setUsers(data);\n            })\n            messageDB.collection('messages').onSnapshot(querySnapshot => {\n                const data = querySnapshot.docs.map(doc => ({\n                    ...doc.data(),\n                    id: doc.id\n                }))\n                setMessages(data);\n            })\n        }\n    }, [messageDB]);\n\n    const getUser = (chatUser) => {\n        if (messageDB) {\n                    messageDB.collection('messages').add({\n                        userSecondID: user.uid,\n                        userFirstID: chatUser.uid\n                    })\n                }\n    }\n    const getChatID = (chatID, event) => {\n        event.preventDefault();\n        setMessageID(chatID);\n    }\n    console.log(messageID);\n    // console.log(messages);\n    return (\n        <>\n            <div className=\"user__page-list\">\n                <div className=\"users__list\">\n                    <h1>Users</h1>\n                    <ul>\n                        <li className=\"user-search\"><a href=\"\"><img src={logo}/></a></li>\n                        {\n                            users.map(user => {\n                                return (\n                                    <>\n                                        <li key={user.id} className=\"user-logo\">\n                                            {/*<a href=\"\"><img src={user.photo}/></a>*/}\n                                            <button onClick={() => getUser(user)}><img src={user.photo}/></button>\n                                            {/*<button onClick={getUser(user)}><img src={user.photo}/></button>*/}\n                                        </li>\n                                    </>\n                                )\n                            })\n                        }\n\n                    </ul>\n                </div>\n                <ul className=\"user-list\">\n                    <h1 className=\"user-list-title\">Messages</h1>\n                    {\n                        messages.map(chat => {\n                            const image = users.map(el => el.uid === chat.userFirstID ? el.photo : null )\n                            const name = users.map(el => el.uid === chat.userFirstID ? el.name : null)\n\n                            return (\n                                <>\n                                    <li  key={chat.id}>\n                                        <a onClick={event => getChatID(chat.id, event)} href=\"\" className=\"users\">\n                                            <img src={`${image}`}/>\n                                            <div className=\"user-description\">\n                                                <h1 className=\"user-desc-unread\">{name}</h1>\n                                                <p>wiadomość cos tam</p>\n                                            </div>\n                                            <div className=\"user-date\">\n                                                <p>12:00</p>\n                                                <p>today</p>\n                                            </div>\n                                        </a>\n                                    </li>\n                                </>\n\n                            )\n                        })\n                    }\n                </ul>\n            </div>\n            {\n                messageID ?\n                    <Chat user={user} messageDB={messageDB} messageID={messageID}/>\n                    :\n                    null\n            }\n\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}